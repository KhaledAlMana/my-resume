{"remainingRequest":"/media/khaled/K's/khaled/Projects/khaleds/node_modules/babel-loader/lib/index.js!/media/khaled/K's/khaled/Projects/khaleds/node_modules/eslint-loader/index.js??ref--13-0!/media/khaled/K's/khaled/Projects/khaleds/src/assets/helpers/options.js","dependencies":[{"path":"/media/khaled/K's/khaled/Projects/khaleds/src/assets/helpers/options.js","mtime":1588447856780},{"path":"/media/khaled/K's/khaled/Projects/khaleds/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/khaled/K's/khaled/Projects/khaleds/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/media/khaled/K's/khaled/Projects/khaleds/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHlhbWwgZnJvbSAnanMteWFtbCc7CmltcG9ydCB7IGRhdGEgfSBmcm9tICcuL2RhdGEvZGF0YS55bWwnOwoKZnVuY3Rpb24gZ2V0RGF0YShuYW1lKSB7CiAgdmFyIGNvbXB1dGVkRGF0YSA9IHlhbWwubG9hZChkYXRhKTsKICBjb21wdXRlZERhdGEgPSBjb21wdXRlZERhdGFbbmFtZV07CgogIGlmIChuYW1lID09ICdjdicpIHsKICAgIGNvbnNvbGUubG9nKGNvbXB1dGVkRGF0YS5wYXRoKTsgLy8gY29tcHV0ZWREYXRhLnBhdGggPSByZXF1aXJlKGNvbXB1dGVkRGF0YS5wYXRoKTsKCiAgICBjb25zb2xlLmxvZyhjb21wdXRlZERhdGEucGF0aCk7CiAgfSBlbHNlIHsKICAgIGlmIChjb21wdXRlZERhdGEubGVuZ3RoID09IHVuZGVmaW5lZCkgewogICAgICB0cnkgewogICAgICAgIGlmIChjb21wdXRlZERhdGEubG9nbyAhPSB1bmRlZmluZWQpIHsKICAgICAgICAgIGNvbXB1dGVkRGF0YS5sb2dvID0gcmVxdWlyZSgiIi5jb25jYXQoY29tcHV0ZWREYXRhLmxvZ28pKTsKICAgICAgICB9IGVsc2UgaWYgKGNvbXB1dGVkRGF0YS5sb2dvID09IG51bGwpIHsKICAgICAgICAgIGNvbXB1dGVkRGF0YS5sb2dvID0gcmVxdWlyZSgiLi9pbWdzL2RlZmF1bHRfZW50aXR5LnBuZyIpOwogICAgICAgIH0KICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgIGNvbXB1dGVkRGF0YS5sb2dvID0gcmVxdWlyZSgiLi9pbWdzL2RlZmF1bHRfZW50aXR5LnBuZyIpOwogICAgICB9CiAgICB9CgogICAgZm9yICh2YXIgaSA9IDA7IGkgPD0gY29tcHV0ZWREYXRhLmxlbmd0aDsgaSsrKSB7CiAgICAgIHRyeSB7CiAgICAgICAgaWYgKGNvbXB1dGVkRGF0YVtpXSAhPSB1bmRlZmluZWQpIHsKICAgICAgICAgIGlmIChjb21wdXRlZERhdGFbaV0ubG9nbyAhPSB1bmRlZmluZWQpIHsKICAgICAgICAgICAgY29tcHV0ZWREYXRhW2ldLmxvZ28gPSByZXF1aXJlKCIiLmNvbmNhdChjb21wdXRlZERhdGFbaV0ubG9nbykpOwogICAgICAgICAgfSBlbHNlIGlmIChjb21wdXRlZERhdGFbaV0ubG9nbyA9PSBudWxsKSB7CiAgICAgICAgICAgIGNvbXB1dGVkRGF0YVtpXS5sb2dvID0gcmVxdWlyZSgiLi9pbWdzL2RlZmF1bHRfZW50aXR5LnBuZyIpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgIGNvbXB1dGVkRGF0YVtpXS5sb2dvID0gcmVxdWlyZSgiLi9pbWdzL2RlZmF1bHRfZW50aXR5LnBuZyIpOwogICAgICB9CiAgICB9CiAgfQoKICByZXR1cm4gewogICAgZGF0YTogY29tcHV0ZWREYXRhCiAgfTsKfQoKZXhwb3J0IHsgZ2V0RGF0YSB9Ow=="},{"version":3,"sources":["/media/khaled/K's/khaled/Projects/khaleds/src/assets/helpers/options.js"],"names":["yaml","data","getData","name","computedData","load","console","log","path","length","undefined","logo","require","e","i"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,SACIC,IADJ,QAEO,iBAFP;;AAIA,SAASC,OAAT,CAAiBC,IAAjB,EAAuB;AACnB,MAAIC,YAAY,GAAGJ,IAAI,CAACK,IAAL,CAAUJ,IAAV,CAAnB;AACAG,EAAAA,YAAY,GAAGA,YAAY,CAACD,IAAD,CAA3B;;AAEA,MAAGA,IAAI,IAAG,IAAV,EAAe;AACXG,IAAAA,OAAO,CAACC,GAAR,CAAYH,YAAY,CAACI,IAAzB,EADW,CAEX;;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYH,YAAY,CAACI,IAAzB;AACH,GAJD,MAIK;AAED,QAAGJ,YAAY,CAACK,MAAb,IAAuBC,SAA1B,EAAoC;AAChC,UAAG;AACC,YAAGN,YAAY,CAACO,IAAb,IAAqBD,SAAxB,EAAkC;AAC9BN,UAAAA,YAAY,CAACO,IAAb,GAAoBC,OAAO,WAAIR,YAAY,CAACO,IAAjB,EAA3B;AACH,SAFD,MAGK,IAAGP,YAAY,CAACO,IAAb,IAAqB,IAAxB,EAA6B;AAC9BP,UAAAA,YAAY,CAACO,IAAb,GAAoBC,OAAO,CAAC,2BAAD,CAA3B;AACH;AACJ,OAPD,CAOC,OAAMC,CAAN,EAAQ;AACLT,QAAAA,YAAY,CAACO,IAAb,GAAoBC,OAAO,CAAC,2BAAD,CAA3B;AACH;AACJ;;AAED,SAAI,IAAIE,CAAC,GAAE,CAAX,EAAcA,CAAC,IAAIV,YAAY,CAACK,MAAhC,EAAwCK,CAAC,EAAzC,EAA4C;AACxC,UAAG;AACC,YAAGV,YAAY,CAACU,CAAD,CAAZ,IAAmBJ,SAAtB,EAAgC;AAC5B,cAAGN,YAAY,CAACU,CAAD,CAAZ,CAAgBH,IAAhB,IAAwBD,SAA3B,EAAqC;AACjCN,YAAAA,YAAY,CAACU,CAAD,CAAZ,CAAgBH,IAAhB,GAAuBC,OAAO,WAAIR,YAAY,CAACU,CAAD,CAAZ,CAAgBH,IAApB,EAA9B;AACH,WAFD,MAGK,IAAGP,YAAY,CAACU,CAAD,CAAZ,CAAgBH,IAAhB,IAAwB,IAA3B,EAAgC;AACjCP,YAAAA,YAAY,CAACU,CAAD,CAAZ,CAAgBH,IAAhB,GAAuBC,OAAO,CAAC,2BAAD,CAA9B;AACH;AACJ;AACJ,OATD,CASC,OAAMC,CAAN,EAAQ;AACLT,QAAAA,YAAY,CAACU,CAAD,CAAZ,CAAgBH,IAAhB,GAAuBC,OAAO,CAAC,2BAAD,CAA9B;AACH;AACJ;AACJ;;AACD,SAAO;AAAEX,IAAAA,IAAI,EAAEG;AAAR,GAAP;AACH;;AAED,SACIF,OADJ","sourcesContent":["import yaml from 'js-yaml';\nimport {\n    data\n} from './data/data.yml';\n\nfunction getData(name) {    \n    var computedData = yaml.load(data);\n    computedData = computedData[name];\n    \n    if(name =='cv'){\n        console.log(computedData.path);\n        // computedData.path = require(computedData.path);\n        console.log(computedData.path);\n    }else{\n            \n        if(computedData.length == undefined){\n            try{    \n                if(computedData.logo != undefined){\n                    computedData.logo = require(`${computedData.logo}`);\n                }\n                else if(computedData.logo == null){\n                    computedData.logo = require(\"./imgs/default_entity.png\");    \n                }\n            }catch(e){\n                computedData.logo = require(\"./imgs/default_entity.png\");    \n            }\n        }\n\n        for(var i =0; i <= computedData.length; i++){\n            try{    \n                if(computedData[i] != undefined){\n                    if(computedData[i].logo != undefined){\n                        computedData[i].logo = require(`${computedData[i].logo}`);\n                    }\n                    else if(computedData[i].logo == null){\n                        computedData[i].logo = require(\"./imgs/default_entity.png\");    \n                    }\n                }\n            }catch(e){\n                computedData[i].logo = require(\"./imgs/default_entity.png\");    \n            }\n        }\n    }   \n    return { data: computedData };\n}\n\nexport {\n    getData\n}\n"]}]}