{"remainingRequest":"/home/khaled/Desktop/vue-projects/khaleds/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/khaled/Desktop/vue-projects/khaleds/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/khaled/Desktop/vue-projects/khaleds/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/khaled/Desktop/vue-projects/khaleds/src/components/Khaleds.vue?vue&type=template&id=bfa52f28&scoped=true&","dependencies":[{"path":"/home/khaled/Desktop/vue-projects/khaleds/src/components/Khaleds.vue","mtime":1585088712550},{"path":"/home/khaled/Desktop/vue-projects/khaleds/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/khaled/Desktop/vue-projects/khaleds/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/khaled/Desktop/vue-projects/khaleds/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/khaled/Desktop/vue-projects/khaleds/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}